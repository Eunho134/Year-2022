# Ansible Ping test playbook
# reference https://docs.ansible.com/ansible/latest/playbook_guide/index.html

$ cat ping_test.yml             # ping test playbook
---
-  name: ping test              # name : task head line
   hosts: all                   # hosts : task hosts
   gather_facts: false          # gather_facts : task 수행 전 hosts 정보 수집 여부
   tasks:                       # task 목록
   - name: ping
     ping:
...


# inventory_path=""             # inventory path
# playbook=""                   # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook

$ cat dir_file_create.yml       # directroy, file create playbook
---
- name: dir and file create
  hosts: all
  gather_facts: false
  tasks:
  - name: Creates directory
    file:
      path: /test
      state: directory
  - name: Creates file
    file:
      path: /test/test.txt
      state: touch
  - name: insert String in file
    lineinfile:
      path: /test/test.txt
      line: "insert test data!!!"


# inventory_path=""             # inventory path
# playbook=""                   # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook

$ cat delete_file.yml           # common delete file 
---
- name: Delete file
  hosts: all
  gather_facts: false
  tasks:
  - name: delete file
    file:
      path: /test/test.txt
      state: absent

$ cat multiple_delete_file.yml  # multiple delete file
---
- name: multiple delete file
  hosts: all
  gather_facts: false
  tasks:
  - name: multiple delete file
  file:
    path: {{item}}
    state: absent
  with_items:
    - test1.txt
    - test2.txt
    - test3.txt
    - test4.txt

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook

$ cat yum_latest.yml          # yum latest install
---
- name : Install the latest version of Apache
  hosts: all
  gather_facts: false
  tasks:
  - name: httpd
    state: latest

$ cat multi_yum.yml           # yum multifle install
---
- name: Install a list of packages
  hosts: all
  gather_facts: false
  tasks:
  - name: 
    - nginx
    - postgresql
    - postgresql-server
  state : present

$ cat external_repo.yml       # install nginx for external repo
---
- name: install the nginx rpm from a remote repo
  hosts: all
  gather_facts: false
  tasks:
  - name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
    state: present
    download_only: false      # Only download file

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook    

$ cat copy_file.yml           # copy file to remote in local
---
- name: copy file to remote in local
  hosts: all
  gather_facts: false
  remote_user: root
  tasks:
  - name: store file to remote server
    copy:
      src: "/test/{{ item }}"
      dest: /root/
      backup: yes             # before file backup
      owner: root
      group: root
      mode: '0755'
    with_items:
        - a.txt
        - b.txt
        - c.txt


# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook    

$ cat gather_fact.yml         # gather_fact 로 Manage Node 수집
---
- name: play to gather and report
  hosts: all
  gather_facts: yes
  tasks:
    - name: Prnit information of distribution
      debug:
        msg: "{{ ansible_facts }}"

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook    

# cron configuration
$ cat crontab_create.yml
---
- name: Cron dalilyCheck job create
  hosts: all
  gather_facts: false
  tasks:
  - name: download daily check script
    copy:
      src: /test/dailycheck.sh
      dest: /root

  - name: cron config
    become: yes
    cron:
      job: sh /root/dailycheck.sh
      month: "*"
      day: "*"
      hour: "*"
      minute: "*/5"

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook  


# shell module : /bin/sh를 기본으로 사용, 환경변수 및 쉘 기능 사용 가능
cat shell.yml
---
- name: Execute ther command in remote shell
  hosts: all
  tasks:
  - shell: /home/ansible_test/get_date.sh >> /home/ansible_test/result.log

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook 

# command module : 쉘 변수나 operator <. >, |, & 사용 불가능
cat command.yml
---
- name: Reboot
  commnad: /sbin/shutdown -r now
  sudo: yes

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook 

# raw module : ssh 에서 command를 실행
cat raw_command.yml
---
- name: Install vim
  raw: yum install -y vim-command
  sudo: yes

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook 

# script module : remote script 실행
cat remote_sh.yml
---
- name: List directories in /etc
  script: list_number_of_directories.sh /etc
  sudo: yes

# inventory_path=""           # inventory path
# playbook=""                 # playbook yaml 파일 명

# 수행 명령어 ansible-playbook -i $inventory_path $playbook 